.Dd 19th of October 2016
.Dt ELFDEPS 1 darkstar-tools-14.2
.Sh NAME
.Nm elfdeps
.Nd querys ELF files for NEEDED libraries.
.Sh SYNOPSIS
.Nm elfdeps
.Op Fl v | q
.Op Fl m
.Op Fl r
.Pa file ... | -p pkg ...
.Sh DESCRIPTION
.Nm
scans the dynamic section of an ELF file for DT_NEEDED libraries,
and does a query for the required libraries in the /lib, /usr/lib, 
/usr/local/lib and /lib64, /usr/lib64, /usr/local/lib64 directories
for 32 and 64 bit ELF files, respectively. Any DT_RPATH found in the
dynamic section is also scanned for the libraries.
Output is formatted as "(<pkg>:)<file>:<lib>:<path>(:<pkg>)", where 
.Pa file
is the path given as argument, lib is the needed library and path
is either the path to required library or "missing".
.Sh ARGUMENTS
.Bl -tag -width Ds
.Fl q
Quiet mode, only print DT_NEEDED and DT_RPATHS of
.Pa file .

.Fl r
Recursively traverse and directories given on command line.
Increase verbosity, may be given multiple times, only for debugging.

.Fl d
Print the package (if any) containing the needed library. 

.Fl p 
.Pa pkg ...
Search files owned by the given package(s). Basically:
.Bd -literal -offset indent
$ cat /var/log/packages/pkgname | xargs elfdeps
.Sh CAVEATS
.Nm
does not actually resolve library dependencies, it ignores
/etc/ld.so.cache, /etc/ld.so.conf and $LD_LIBRARY_PATH. It is designed
to sacrifice accuracy for speed. For proper dependency resolution use
.Xr ldd 1 .
The program scans each directory only once, multiple 
.Pa file s
sharing DT_RPATH, or DT_RPATH containing e.g. /usr/lib64, will not
incur rescanning of the given directory. Files in a scanned directory
is regarded as a potential library iff its name contains the string
".so", they are never
.Xr stat(2)'ed ,
so they might be dangling symlinks, sockets, directories, or any
non-shared-library file possible. The fact that
.Nm
claims that a library is either missing or found at some particular
path does not answer wheter or not a library dependency is actually
satisfied, but hopefully it should give an accrurate picture in most cases.
.Sh BUGS
DT_RPATH is (allegedly) deprecated, DT_RUNPATH should be queried as well,
but isn't.

.Sh SEE ALSE
.Xr ldd 1 ,
.Xr readelf 1 ,
.Xr objdump 1 ,
.Xr elf 5 ,
.Xr ld.so 8 ,
